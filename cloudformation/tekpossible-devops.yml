AWSTemplateFormatVersion: 2010-09-09
Resources:
  # TODO: We need to create IAM roles for codebuild,cloudformation,codedeploy, and the codepipeline itself. Maybe we do ABAC stuff?

  TekPossibleIACPipelineStorage:
    Type: AWS::S3::Bucket
    Properties: 
      VersioningConfiguration:
        Status: Enabled
      BucketName: tekpossible-iac-pipeline-storage

  TekPossibleIaCApprovalSNS:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: TekPossible IaC Approval
      TopicName: TekPossibleIaCApproval

  TekPossibleIaCApprovalSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref TekPossibleIaCApprovalSNS
      Protocol: email
      Endpoint: tech-leads@tekpossible.com # TODO: Remove the static reference for this via parameters


  TekPossibleIACRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: TekPossible Infrastructure as Code
      RepositoryName: tekpossible-iac # remote url for iam ic (federated) users: codecommit::us-east-2://tekpossible-iac
  
  TekPossibleIaCCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: TekPossibleIaCCodeBuildProject
      BadgeEnabled: true
      Cache:
        Type: NO_CACHE # Cache is a dangerous game - I'd rather take the 5 minutes to install the tools than break stuff
      ConcurrentBuildLimit: 5
      Description: TekPossible IaC Project Test Script
      ServiceRole: <CREATE_THIS>
      Visibility: PRIVATE # Need to know only for the build results - I am going to try to add some sast stuff to the linter as well.
      Environment:
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:5.0" # TODO: Parameterize this bad boi
        ComputeType: BUILD_GENERAL1_SMALL # TODO: Parameterize this bad boi
        Type: LINUX_CONTAINER
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE # We will see if this works - not sure since techincally we are creating a standalone codebuild deployment

  TekPossibleIACPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: TekPossibleIACPipeline
      PipelineType: V2
      RoleArn: <CREATE_THIS>
      ArtifactStore:
        Type: S3
        Location: !Ref TekPossibleIACPipelineStorage
      Stages: 
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                - Name: TekPossibleIaCSource
              Configuration:
                BranchName: main
                RepositoryName: !GetAtt TekPossibleIACRepo.Name
                PollForSourceChanges: false
              RunOrder: 1

        - Name: Test
          Actions:
            - Name: LintSASTAction
              ActionTypeId:
                Category: Test 
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts: 
                - Name: TekPossibleIaCSource
              Configuration:
                BatchEnabled: false # Only one build per container - just in case you know
                ProjectName: !Ref TekPossibleIaCCodeBuildProject
              RunOrder: 1
        # - PUSH TO GREEN (TODO)
        - Name: Approval
          Actions:
            - Name: ManualApprovalBeforeDeploy
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration: 
                NotificationArn: !Ref TekPossibleIaCApprovalSNS # TODO: Either get a static toll-free number or do this the email way 
          # - PUSH TO BLUE
          # Source (DONE)
          # Test/Lint (ansible/cfn/sast for iac checks)(ALMOST DONE)
          # Deploy/Create Green Stack
          #  a ) delete any cfn stack tagged as green deployment
          #  b) create the green stack with cfn
          #  c) deploy software/iac changes to the stack via codedeploy
          # Approval (manual step)(DONE)
          # Push straight to prod
          #  a) ensure green stack is healthy, and is attached to ELB
          #  b) delete blue stack post health checks 
      RestartExecutionOnUpdate: false # Don't restart pipeline on new commit; it should just make a new pipeline for that in the queue